给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:
给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]


solution:

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        length = len(nums)
        for i in range(length):
            getNumber = target-nums[i]
            for j in range(length):
                if i!=j:
                    if nums[j] ==getNumber:
                        return [i,j]
res:5792 ms, 在Two Sum的Python提交中击败了8.98% 的用户

solution:
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        length = len(nums)
        dict={}
        for i in range(length):
            dict[nums[i]]=i
        for j in range(length):
            res=target-nums[j]
            if res in dict and dict[res]!=j:
                return [j,dict[res]]
执行用时: 44 ms, 在Two Sum的Python提交中击败了69.76% 的用户
solution:
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        a=0
        dict={}
        for line in nums:
            dict[line]=a
            a+=1
        for j in range(len(nums)):
            res=target-nums[j]
            if res in dict and dict[res]!=j:
                return [j,dict[res]]
执行用时: 28 ms, 在Two Sum的Python提交中击败了98.21% 的用户
solution:
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        a=0
        dict={}
        for line in nums:
            res=target-line
            if res in dict and dict[res]!=a:
                return [dict[res],a]
            dict[line]=a
            a+=1
执行用时: 28 ms, 在Two Sum的Python提交中击败了98.21% 的用户
